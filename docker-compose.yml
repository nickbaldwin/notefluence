version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: notebook-wiki-postgres
    environment:
      POSTGRES_DB: notebook_wiki
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - notebook-wiki-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: notebook-wiki-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - notebook-wiki-network

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: notebook-wiki-server
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/notebook_wiki
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - notebook-wiki-network
    command: npm run dev

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: notebook-wiki-client
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000
      NEXT_PUBLIC_WS_URL: ws://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - server
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - notebook-wiki-network
    command: npm run dev

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: notebook-wiki-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - server
      - client
    networks:
      - notebook-wiki-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  notebook-wiki-network:
    driver: bridge
